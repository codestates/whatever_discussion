[{"/Users/leeseungjun/Downloads/whatever_discussion/client/src/index.js":"1","/Users/leeseungjun/Downloads/whatever_discussion/client/src/App.js":"2","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Header.js":"3","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Footer.js":"4","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Signup.js":"5","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Signin.js":"6","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Main.js":"7","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Post.js":"8","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/ContentsBox.js":"9","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Comment.js":"10"},{"size":253,"mtime":1652919124823,"results":"11","hashOfConfig":"12"},{"size":1586,"mtime":1652938798348,"results":"13","hashOfConfig":"12"},{"size":969,"mtime":1652934024095,"results":"14","hashOfConfig":"12"},{"size":409,"mtime":1652919124811,"results":"15","hashOfConfig":"12"},{"size":2865,"mtime":1652933881791,"results":"16","hashOfConfig":"12"},{"size":1696,"mtime":1652938640738,"results":"17","hashOfConfig":"12"},{"size":1013,"mtime":1652919124820,"results":"18","hashOfConfig":"12"},{"size":2262,"mtime":1652919888755,"results":"19","hashOfConfig":"12"},{"size":1106,"mtime":1652919124811,"results":"20","hashOfConfig":"12"},{"size":999,"mtime":1652919124810,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"19izofu",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"25"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/leeseungjun/Downloads/whatever_discussion/client/src/index.js",[],[],[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/App.js",["58","59","60"],[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Header.js",["61","62"],[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Footer.js",["63"],[],"import './Footer.css';\nimport githubIcon from '../Icons/github.png'\n\nfunction Footer() {\n  return (\n    <div>\n      <div className='footer'>\n        <p>copyrightⓒ Team GI-GO All right reserved.</p>\n        <a href='https://github.com/codestates/whatever_discussion' target='_blank'>\n          <img src={githubIcon} alt='accountIcon'></img>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Signup.js",[],[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Signin.js",["64"],[],"import './Signin.css';\nimport logo from '../Images/LogoBlack.png'\nimport React, { useState } from 'react';\nimport {BrowserRouter as Route } from \"react-router-dom\";\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n  \nfunction Signin({ handleResponseSuccess,handleResponseFail}) {\n\n  const [signinInfo, setSigninInfo] = useState({\n    userId: '',\n    password: ''\n  });\n\n  const handleInputValue = (key) => (e) => {\n    setSigninInfo({ ...signinInfo, [key]: e.target.value });\n  };\n\n  const handleSignin = () => {\n\n    if(signinInfo.userId && signinInfo.password) {\n      axios.post('http://localhost:4000/auth/signin',signinInfo,\n      { headers: {Accept: \"application/json\",\"Content-Type\": \"application/json\"},withCredentials: true})\n      .then((res)=>\n      res.data.message===\"You are successfully logged in.\" ? handleResponseSuccess(res.data.accessToken): handleResponseFail() \n      )\n    }\n    if(!signinInfo.userId || !signinInfo.password) {\n      return alert('Insufficient data were provided to server.')\n    } \n  }\n  return (\n    <div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <div className='signIn'>\n            <img src={logo} alt='logo'></img>\n            <h2>로그인</h2>\n            <input type='text' placeholder='아이디' onChange={handleInputValue('userId')} required></input>\n            <input type='password' placeholder='비밀번호' onChange={handleInputValue('password')} required></input>\n            <div>\n              <p>처음 방문하셨나요?</p>\n              <input type=\"submit\" value=\"로그인\" onClick={handleSignin}></input>\n            </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signin;",[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Main.js",[],[],"/Users/leeseungjun/Downloads/whatever_discussion/client/src/Pages/Post.js",["65","66"],[],"import './Post.css';\nimport postPic from '../Images/post.jpg'\nimport Comment from '../Components/Comment';\nimport dummy from '../Components/comments.json'\nimport content from '../Components/content.json'\n\n\nfunction Post() {\n  \n  return (\n    <div>\n      <div className='postpage'>\n        \n        <div className='post'>\n          <img src={content.content[0].image} alt='Post Image'></img>\n          <div className='subject'>\n            <div>topic</div>\n            <p>{content.content[0].subject}</p>\n          </div>\n          <div className='content'>\n            <div>\n              <p>{content.content[0].content}</p>\n            </div>\n          </div>\n          \n          <div className='vote'>\n            <div>\n              <div className='agree'>\n                <p>찬성 56%</p>\n              </div>\n              <div className='disagree'>\n                <p>반대 44%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='modify'>\n          <button>수정</button>\n          <button>삭제</button>\n        </div>\n\n        {/* <div className='line'></div> */}\n\n        <div className='comments'>\n          <div className='commentOptions'>\n            <div className='commentLeft'>\n              <div></div>\n              <p>댓글</p>\n              <p>{dummy.comments.length}</p>\n            </div>\n            <div className='commentRight'>\n              <select>\n                <option value='1'>모든 댓글보기</option>\n                <option value='2'>찬성 댓글보기</option>\n                <option value='3'>반대 댓글보기</option>\n              </select>\n              <p>공감순</p>\n              <p>시간순</p>\n            </div>\n            \n          </div>\n          <div className='commentWrite'>\n            <div>\n              <p>아이디</p>\n            </div>\n            <div>\n              <form>\n                <input type='text' placeholder='댓글을 남겨보세요.' required></input>\n                <input type='submit' value='등록' onClick={() => alert('게시물 업로드')}></input>\n              </form>\n            </div>\n          </div>\n          \n          <Comment />\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/ContentsBox.js",["67","68","69","70"],[],"import './ContentsBox.css';\nimport accountIcon from '../Icons/account.svg'\nimport voteIcon from '../Icons/vote.svg'\nimport repleIcon from '../Icons/repleIcon.svg'\n\nfunction ContentsBox({content}) {\n  return (\n    <div>\n      <div className='board' key={content.id}>\n        <a href='/post'>\n          <div className='imgBox'>\n            <img src={content.image}></img>\n          </div>\n        </a>\n        <div className='topic'>Topic</div>\n        <h3 className='title'>{content.subject}</h3>\n        <div className='iconBox'>\n            <div className='voteIconBox'>\n              <img className='voteIcon' src={voteIcon}></img>\n              <div className='data'>{content.likes}</div> \n              <img className='repleIcon' src={repleIcon}></img>\n              <div className='data'>{content.comments}</div> \n            </div>\n            <div className='accountIconBox' >\n              <img className='accountIcon' src={accountIcon}></img>\n              <div className='userId'>{content.userId}</div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentsBox;","/Users/leeseungjun/Downloads/whatever_discussion/client/src/Components/Comment.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":17,"nodeType":"73","messageId":"74","endLine":2,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"71","severity":1,"message":"76","line":21,"column":10,"nodeType":"73","messageId":"74","endLine":21,"endColumn":18},{"ruleId":"71","severity":1,"message":"77","line":7,"column":18,"nodeType":"73","messageId":"74","endLine":7,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":28,"column":9,"nodeType":"80","endLine":28,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":9,"column":9,"nodeType":"80","messageId":"83","endLine":9,"endColumn":85,"fix":"84"},{"ruleId":"71","severity":1,"message":"85","line":4,"column":26,"nodeType":"73","messageId":"74","endLine":4,"endColumn":31},{"ruleId":"71","severity":1,"message":"86","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":15,"column":11,"nodeType":"80","endLine":15,"endColumn":64},{"ruleId":"89","severity":1,"message":"90","line":12,"column":13,"nodeType":"80","endLine":12,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":19,"column":15,"nodeType":"80","endLine":19,"endColumn":56},{"ruleId":"89","severity":1,"message":"90","line":21,"column":15,"nodeType":"80","endLine":21,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":25,"column":15,"nodeType":"80","endLine":25,"endColumn":62},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'isSignin' is assigned a value but never used.","'setIslogin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"91","text":"92"},"'Route' is defined but never used.","'postPic' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[281,281]," rel=\"noreferrer\""]